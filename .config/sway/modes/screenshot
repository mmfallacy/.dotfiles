# ---------------------------------------------------------------------
# Swap mode
# ---------------------------------------------------------------------
bindsym $mod+Shift+S mode "screenshot"
mode "screenshot" {
    set $TMP_LAST_REGION /tmp/slurp_last_region

    # Screenshot a region
    # Select Region => 
    # Save to temp file =>
    # Capture region via grim =>
    # Open swappy on captured region.
    bindsym s exec slurp |\
            tee $TMP_LAST_REGION |\
            xargs -I {} grim -g "{}" - |\
            swappy -f -, mode "default"
            
    # Screenshot last region
    # Read last region from temp file => 
    # Capture region via grim => 
    # Open swappy on captured region.
    bindsym Shift+s exec cat $TMP_LAST_REGION |\
            xargs -I {} grim -g "{}" - |\
            swappy -f -, mode "default"

    # Screenshot a monitor/output
    # Select monitor => 
    # Save to temp file =>
    # Capture region via grim =>
    # Open swappy on captured region.
    bindsym m exec slurp -o |\
            tee $TMP_LAST_REGION |\
            xargs -I {} grim -g "{}" - |\
            swappy -f -, mode "default"

    # Screenshot a monitor/output
    # Get sway tree => 
    # Parse as json, filter which has pid and is visible and get geometry
    # Transform previous output to "<x>,<y> <width>x<height>" 
    # Pipe parsed geometries as predefined rectangles for slurp selection 
    # Save to temp file =>
    # Capture region via grim =>
    # Open swappy on captured region.
    bindsym w exec swaymsg -t get_tree |\
            jq -r '.. | select(.pid? and .visible?) | .rect' |\
            jq -r '"\(.x),\(.y) \(.width)x\(.height)"' |\
            slurp |\
            tee $TMP_LAST_REGION |\
            xargs -I {} grim -g "{}" - |\
            swappy -f -, mode "default"

    bindsym q mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# vim: set ft=swayconfig:
